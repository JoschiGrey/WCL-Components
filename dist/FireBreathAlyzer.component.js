/*!
 * Created using the WCL-TS-Components Template https://github.com/JoschiGrey/WCL-TS-Components
 * The source code can be found here https://github.com/JoschiGrey/WCL-Components
 *
 */
let getComponent;(()=>{"use strict";var t={d:(e,i)=>{for(var s in i)t.o(i,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:i[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{default:()=>n});const i=(t,e)=>{for(const i of e)for(const e in i)if(t[e]!==i[e])return!0};class s{constructor(t,e={}){this.actors={};for(const s of t){if(!s.ability||!s.target||!s.source)continue;if(s.type.includes("stack"))continue;if("Pet"===s.target.type)continue;if("friendly"!==s.targetDisposition)continue;if(e.auraIds&&!e.auraIds.has(s.ability.id))continue;if(e.fight&&e.fight.isEventExcludedFromDamageRankings(s))continue;if(e.targetFilters&&i(s.target,e.targetFilters))continue;if(e.sourceFilters&&i(s.source,e.sourceFilters))continue;if(e.abilityFilters&&i(s.ability,e.abilityFilters))continue;const t=new r(s.source.id),n=new o(s.target.id),d=new a(s.ability.id);s.type.includes("apply")?this.addActor(t).addTarget(n).addBuff(d).buffApplied(s,e.captureEvent):s.type.includes("remove")&&this.addActor(t).addTarget(n).addBuff(d).buffRemoved(s,e.captureEvent)}}addActor(t){return this.actors[t.id]?this.actors[t.id]:(this.actors[t.id]=t,t)}getAurasBySourceActor(t){if(this.actors[t])return this.actors[t]}getSelfBuff(t,e){return this.actors[t].targets[t].buffs[e]}}class r{constructor(t){this.targets={},this.id=t}addTarget(t){return this.targets[t.id]?this.targets[t.id]:(this.targets[t.id]=t,t)}}class o{constructor(t){this.buffs={},this.id=t}addBuff(t){return this.buffs[t.id]?this.buffs[t.id]:(this.buffs[t.id]=t,t)}}class a{constructor(t){this.applied=[],this.removed=[],this.events={},this.id=t}buffApplied(t,e=!1){this.applied.push(t.timestamp),e&&(this.events[t.timestamp]=t)}buffRemoved(t,e=!1){this.removed.push(t.timestamp),e&&(this.events[t.timestamp]=t)}get appliedTimings(){return this.applied}get removedTimings(){return this.removed}get sortedTimeSpans(){if(this._sortedTimes)return JSON.parse(JSON.stringify(this._sortedTimes));for(this.applied=Array.from(new Set(this.applied)),this.removed=Array.from(new Set(this.removed));this.applied.length<this.removed.length;)this.applied.unshift(0);for(this.applied.sort(((t,e)=>t-e));this.removed.length<this.applied.length;)this.removed.push(1/0);return this.removed.sort(((t,e)=>t-e)),this._sortedTimes=Array.from(Array(Math.max(this.applied.length,this.removed.length)),((t,e)=>[this.applied[e]?this.applied[e]:0,this.removed[e]?this.removed[e]:1/0])),JSON.parse(JSON.stringify(this._sortedTimes))}isTimeInTimeSpans(t){let e=0,i=this.sortedTimeSpans.length-1;for(;e<=i;){const s=Math.floor((e+i)/2),[r,o]=this.sortedTimeSpans[s];if(t>=r&&t<=o)return!0;t<r?i=s-1:e=s+1}return!1}}const n=getComponent=()=>{const t=(e=reportGroup.fights[0],i="aurasCast",r="friendly",e.eventsByCategoryAndDisposition(i,r));var e,i,r;return new s(t,{sourceFilters:[{idInReport:1}]})};globalThis.getComponent=e.default})();